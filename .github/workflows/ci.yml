name: CI

on:
  push:
    branches:
      - master
  pull_request:

env:
  NODE_VERSION: '10.x'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v2
        with:
          node-version: '${{ env.NODE_VERSION }}'

      - name: Get package manager's global cache path
        id: global-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache package manager's global cache and node_modules
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.global-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-

      - name: Install Dependencies
        run: npm ci
        if: |
          steps.cache-dependencies.outputs.cache-hit != 'true'

      - name: Lint
        run: npm run-script lint

  test:
    name: Tests
    runs-on: ${{ matrix.os }}
    needs: lint

    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v2
        with:
          node-version: '${{ env.NODE_VERSION }}'

      - name: Get package manager's global cache path
        id: global-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache package manager's global cache and node_modules
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.global-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-

      - name: Install Dependencies
        run: npm ci
        if: |
          steps.cache-dependencies.outputs.cache-hit != 'true'

      - name: Test
        run: npm run-script test:ember --launch ${{ matrix.browser }}

  floating-dependencies:
    name: Floating Dependencies
    runs-on: ${{ matrix.os }}
    needs: lint

    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v2
        with:
          node-version: '${{ env.NODE_VERSION }}'

      - name: Get package manager's global cache path
        id: global-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache package manager's global cache and node_modules
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.global-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-floating-deps
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-

      - name: Install Dependencies
        run: npm install --no-package-lock

      - name: Test
        run: npm run-script test:ember --launch ${{ matrix.browser }}

  try-scenarios:
    name: Tests - ${{ matrix.ember-try-scenario }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow-failure }}
    needs: test

    strategy:
      fail-fast: true
      matrix:
        ember-try-scenario:
          [ember-lts-3.20, ember-lts-3.24, ember-release, ember-beta, ember-default-with-jquery, ember-classic]
        allow-failure: [false]
        include:
          - ember-try-scenario: ember-canary
            allow-failure: true

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v2
        with:
          node-version: '${{ env.NODE_VERSION }}'

      - name: Get package manager's global cache path
        id: global-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache package manager's global cache and node_modules
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.global-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-

      - name: Install Dependencies
        run: npm ci
        if: |
          steps.cache-dependencies.outputs.cache-hit != 'true'

      - name: Test
        env:
          EMBER_TRY_SCENARIO: ${{ matrix.ember-try-scenario }}
        run: node_modules/.bin/ember try:one $EMBER_TRY_SCENARIO

  deploy-app:
    name: Deploy app
    needs: [lint, test, floating-dependencies, try-scenarios]
    runs-on: ubuntu-latest
    timeout-minutes: 7
    # Only run on pushes to the default branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v2

      - name: Set up Git user
        run: |
          # Set up a Git user for committing
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@users.noreply.github.com"
          # Copy the Git Auth from the local config
          git config --global "http.https://github.com/.extraheader" \
            "$(git config --local --get http.https://github.com/.extraheader)"
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get package manager's global cache path
        id: global-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache package manager's global cache and node_modules
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.global-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-

      - name: Install Dependencies
        run: npm ci
        if: |
          steps.cache-dependencies.outputs.cache-hit != 'true'

      - name: Set ENV
        # 'master' or 'v1.2.3'
        # https://github.com/ember-learn/ember-cli-addon-docs/issues/454#issuecomment-584129324
        # https://github.com/ember-learn/ember-cli-addon-docs/issues/437
        run: echo "ADDON_DOCS_VERSION_PATH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Deploy
        run: npm run-script deploy
