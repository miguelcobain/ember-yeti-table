{"version":3,"file":"column.js","sources":["../../../../../src/components/yeti-table/thead/row/column.gjs"],"sourcesContent":["import { template as template_bcb228dc1ffb4deda9e69df6d30a26ec } from \"@ember/template-compiler\";\nimport { isArray } from '@ember/array';\nimport { assert } from '@ember/debug';\nimport Component from '@glimmer/component';\nimport { modifier } from 'ember-modifier';\nimport { localCopy } from 'tracked-toolbox';\n/**\n  An important component yielded from the header or head.row component that is used to define\n  a column of the table.\n\n  ```hbs\n  <table.header as |header|>\n    <header.column @prop=\"firstName\" as |column|>\n      First name\n      {{if column.isAscSorted \"(sorted asc)\"}}\n      {{if column.isDescSorted \"(sorted desc)\"}}\n    </header.column>\n  </table.header>\n  ```\n\n  ```hbs\n  <table.thead as |head|>\n    <head.row as |row|>\n      <row.column @prop=\"firstName\" as |column|>\n        First name\n        {{if column.isAscSorted \"(sorted asc)\"}}\n        {{if column.isDescSorted \"(sorted desc)\"}}\n      </row.column>\n    </head.row>\n  </table.thead>\n  ```\n\n  @class Column\n  @yield {object} column\n  @yield {boolean} column.isSorted - `true` if column is sorted ascending or descending\n  @yield {boolean} column.isAscSorted - `true` if column is sorted ascending\n  @yield {boolean} column.isDescSorted - `true` if column is sorted descending\n*/ import { on } from '@ember/modifier';\nimport { fn, hash } from '@ember/helper';\nexport default class Column extends Component {\n    static{\n        template_bcb228dc1ffb4deda9e69df6d30a26ec(`\n    {{! template-lint-disable no-invalid-interactive }}\n    {{#if this.visible}}\n      <th\n        role={{if this.sortable 'button'}}\n        class='{{@class}}\n          {{@theme.theadCell}}\n          {{if this.sortable @theme.sorting.columnSortable}}\n          {{if this.isSorted @theme.sorting.columnSorted}}\n          {{if this.isAscSorted @theme.sorting.columnSortedAsc}}\n          {{if this.isDescSorted @theme.sorting.columnSortedDesc}}'\n        {{on 'click' (if this.sortable (fn @onClick this) this.noop)}}\n        {{this.updateName}}\n        ...attributes\n      >\n        {{yield (hash isSorted=this.isSorted isAscSorted=this.isAscSorted isDescSorted=this.isDescSorted)}}\n      </th>\n    {{/if}}\n  `, {\n            component: this,\n            eval () {\n                return eval(arguments[0]);\n            }\n        });\n    }\n    /**\n   * An important argument that Yeti Table uses to tie this column to a certain property on\n   * each row object of the original `@data` (or `@loadFunction`) that was passed in.\n   *\n   * This is the argument that Yeti Table uses to filter and sort the data.\n   *\n   * This argument also allows Yeti Table to keep itself up to date when the original\n   * data changes. NOTE: If this property is a nested property (one that contains periods),\n   * the table will not update when this property changes. This is due to `@each` only supporting\n   * one level of properties.\n   *\n   * If you don't need sorting, filtering or automatic table unrolling (using the blockless\n   * body component), then this property is optional.\n   *\n   * @argument prop\n   * @type {String}\n   */ get prop() {\n        return this.args.prop;\n    }\n    /**\n   * Set to `false` to hide the entire column across all rows. Keep in mind that this property\n   * won't just hide the column using css. The DOM for the column will be removed. Defaults to `true`.\n   *\n   * @argument visible\n   * @type {Boolean}\n   */ @localCopy('args.visible', true)\n    visible;\n    /**\n   * Used to turn off sorting clicking on this column (clicks won't toggle sorting anymore).\n   * Useful on avatar columns, for example, where a sorting order doesn't really make sense.\n   * Defaults to the `<YetiTable>` `@sortable` argument (which in turn defaults to `true`).\n   *\n   * @argument sortable\n   * @type Boolean\n   */ @localCopy('args.sortable', true)\n    sortable;\n    /**\n   * Optionally use an `asc` or `desc` string on this argument to turn on ascending or descending sorting\n   * on this column. Useful to turn on default sortings on the table.\n\n   * @argument sort\n   * @type {String}\n   */ @localCopy('args.sort')\n    sort;\n    /**\n   * Use `@sortSequence` to customize the sequence in which the sorting order will cycle when\n   * clicking on this column header. You can either pass in a comma-separated string or an array\n   * of strings. Accepted values are `'asc'`, `'desc'` and `'unsorted'`. The default value is `['asc', 'desc']`\n   * or whatever the global table sortSequence value is.\n   *\n   * @argument sortSequence\n   * @type Array\n   */ /**\n   * Used to turn off filtering for this column. When `false`, Yeti Table won't look for\n   * values on this column. Defaults to `true`.\n   *\n   * @argument filterable\n   * @type {Boolean}\n   */ @localCopy('args.filterable', true)\n    filterable;\n    /**\n   * The column filter. If passed in, Yeti Table will search this column for rows that contain this\n   * string and show those rows.\n   *\n   * The column definitions `@filter` argument is subtractive, meaning that it will filter out rows\n   * from the subset that passes the general `@filter`.\n   *\n   * @argument filter\n   * @type {String}\n   */ get filter() {\n        return this.args.filter;\n    }\n    /**\n   * An optional function to customize the filtering logic *on this column*. This function should return true\n   * or false to either include or exclude the row on the resulting set. If this function depends\n   * on a value, pass that value as the `@filterUsing` argument.\n   *\n   * This function will be called with two arguments:\n   * - `value` - the current data cell to use for filtering\n   * - `filterUsing` - the value you passed in as `@filterUsing`\n   *\n   * @argument filterFunction\n   * @type {Function}\n   */ get filterFunction() {\n        return this.args.filterFunction;\n    }\n    /**\n   * If you `@filterFunction` function depends on a different value (other that `@filter`)\n   * to show, pass it in this argument. Yeti Table uses this argument to know when to recalculate\n   * the fitlered rows.\n   *\n   * @argument filterUsing\n   * @type {String}\n   */ get filterUsing() {\n        return this.args.filterUsing;\n    }\n    /**\n   * Used to add a class to all the cells in this column.\n   *\n   * @argument columnClass\n   * @type {String}\n   */ get columnClass() {\n        return this.args.columnClass;\n    }\n    /**\n   * This property is a human-readable representation of the name of the column.\n   * It defaults to the trimmed `textContent` of the `<th>` element, but can be overridden\n   * by using a `@name=\"your custom name\"` argument.\n   *\n   * @argument name\n   * @type {String}\n   */ @localCopy('args.name')\n    name;\n    /**\n   * An optional function to be invoked whenever this column is clicked\n   *\n   * This function will be called with two arguments:\n   * - `column` - the column that was clicked\n   *\n   * @argument onClick\n   * @type {Function}\n   */ get isAscSorted() {\n        return this.sort === 'asc';\n    }\n    get isDescSorted() {\n        return this.sort === 'desc';\n    }\n    get isSorted() {\n        return this.isAscSorted || this.isDescSorted;\n    }\n    get normalizedSortSequence() {\n        let sortSequence = this.args.sortSequence;\n        assert('@sortSequence must be either a comma-separated string or an array. Got `${sortSequence}.`', isArray(sortSequence) || typeof sortSequence === 'string');\n        if (isArray(sortSequence)) {\n            return sortSequence;\n        } else if (typeof sortSequence === 'string') {\n            return sortSequence.split(',').map((s)=>s.trim());\n        } else {\n            return [];\n        }\n    }\n    constructor(){\n        super(...arguments);\n        this.args.parent?.registerColumn(this);\n    }\n    willDestroy() {\n        super.willDestroy(...arguments);\n        this.args.parent?.unregisterColumn(this);\n    }\n    updateName = modifier((element)=>{\n        if (!this.args.name) {\n            this.name = element.textContent.trim();\n        }\n    });\n    noop = ()=>{};\n}\n//# sourceMappingURL=data:application/json;base64,"],"names":["Column","_dec","localCopy","_dec2","_dec3","_dec4","_dec5","_class","_Column","Component","prop","args","filter","filterFunction","filterUsing","columnClass","isAscSorted","sort","isDescSorted","isSorted","normalizedSortSequence","sortSequence","assert","isArray","split","map","s","trim","constructor","arguments","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_defineProperty","modifier","element","name","textContent","parent","registerColumn","willDestroy","unregisterColumn","setComponentTemplate","precompileTemplate","strictMode","scope","on","fn","hash","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer"],"mappings":"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"}