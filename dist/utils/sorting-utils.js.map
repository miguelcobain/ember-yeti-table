{"version":3,"file":"sorting-utils.js","sources":["../../src/utils/sorting-utils.js"],"sourcesContent":["import { get } from '@ember/object';\nimport { compare, isNone } from '@ember/utils';\n\nfunction merge(left, right, comparator) {\n  let mergedArray = [];\n  let leftIndex = 0;\n  let rightIndex = 0;\n\n  while (leftIndex < left.length && rightIndex < right.length) {\n    let comparison = comparator(left[leftIndex], right[rightIndex]);\n\n    if (comparison <= 0) {\n      mergedArray.push(left[leftIndex]);\n      leftIndex++;\n    } else {\n      mergedArray.push(right[rightIndex]);\n      rightIndex++;\n    }\n  }\n\n  if (leftIndex < left.length) {\n    mergedArray.splice(mergedArray.length, 0, ...left.slice(leftIndex));\n  }\n\n  if (rightIndex < right.length) {\n    mergedArray.splice(mergedArray.length, 0, ...right.slice(rightIndex));\n  }\n\n  return mergedArray;\n}\n\n/**\n * An implementation of the standard merge sort algorithm.\n *\n * This is necessary because we need a stable sorting algorithm that accepts\n * a general comparator. The built in sort function and Ember's sort functions\n * are not stable, and `_.sortBy` doesn't take a general comparator. Ideally\n * lodash would add a `_.sort` function whose API would mimic this function's.\n *\n * @function\n * @param {Array} array The array to be sorted\n * @param {Comparator} comparator The comparator function to compare elements with.\n * @return {Array} A sorted array\n */\nexport function mergeSort(array, comparator = compare) {\n  if (array.length <= 1) {\n    return array;\n  }\n\n  let middleIndex = Math.floor(array.length / 2);\n  let leftArray = mergeSort(array.slice(0, middleIndex), comparator);\n  let rightArray = mergeSort(array.slice(middleIndex), comparator);\n\n  return merge(leftArray, rightArray, comparator);\n}\n\nexport function sortMultiple(itemA, itemB, sorts, compare) {\n  let compareValue;\n\n  for (let { prop, direction } of sorts) {\n    let valueA = get(itemA, prop);\n    let valueB = get(itemB, prop);\n\n    compareValue = direction === 'asc' ? compare(valueA, valueB) : -compare(valueA, valueB);\n\n    if (compareValue !== 0) {\n      break;\n    }\n  }\n\n  return compareValue;\n}\n\nfunction isExactlyNaN(value) {\n  return typeof value === 'number' && isNaN(value);\n}\n\nfunction isEmpty(value) {\n  return isNone(value) || isExactlyNaN(value);\n}\n\nfunction orderEmptyValues(itemA, itemB) {\n  let aIsEmpty = isEmpty(itemA);\n  let bIsEmpty = isEmpty(itemB);\n\n  if (aIsEmpty && !bIsEmpty) {\n    return -1;\n  } else if (bIsEmpty && !aIsEmpty) {\n    return 1;\n  } else if (isNone(itemA) && isExactlyNaN(itemB)) {\n    return -1;\n  } else if (isExactlyNaN(itemA) && isNone(itemB)) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\nexport function compareValues(itemA, itemB) {\n  if (isEmpty(itemA) || isEmpty(itemB)) {\n    return orderEmptyValues(itemA, itemB);\n  }\n\n  return compare(itemA, itemB);\n}\n"],"names":["merge","left","right","comparator","mergedArray","leftIndex","rightIndex","length","comparison","push","splice","slice","mergeSort","array","compare","middleIndex","Math","floor","leftArray","rightArray","sortMultiple","itemA","itemB","sorts","compareValue","prop","direction","valueA","get","valueB","isExactlyNaN","value","isNaN","isEmpty","isNone","orderEmptyValues","aIsEmpty","bIsEmpty","compareValues"],"mappings":"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"}